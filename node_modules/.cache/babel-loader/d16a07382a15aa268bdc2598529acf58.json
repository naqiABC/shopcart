{"ast":null,"code":"/**\n * React Router DOM v6.18.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n      _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\n\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))))), null);\n}\n\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    unstable_viewTransition,\n    children\n  } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {})); // Internal hooks\n\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n} // External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n\nlet fetcherId = 0;\n\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\n\nfunction useFetcher(_temp3) {\n  var _route$matches;\n\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0; // Fetcher key handling\n\n  let [fetcherKey, setFetcherKey] = React.useState(key || \"\");\n\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  } // Registration/cleanup\n\n\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]); // Fetcher additions\n\n  let load = React.useCallback(href => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n\n    return FetcherForm;\n  }, [fetcherKey]); // Exposed FetcherWithComponents\n\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","deletedFetchers","unstable_viewTransitionOpts","viewTransitionOpts","current","delete","fetchers","fetcher","set","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","_extends","Form","forwardedRef","fetcherKey","onSubmit","_ref9","props","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","_temp","replaceProp","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","fetch","formEncType","fromRouteId","_temp2","routeContext","RouteContext","match","matches","slice","route","index","params","toString","joinPaths","useFetcher","_temp3","UseFetcher","routeId","_route$matches","id","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","get","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","_ref12","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["../dom.ts","../index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { deletedFetchers, unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n              >\n                {state.initialized ? (\n                  <DataRoutes routes={router.routes} state={state} />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || \"\");\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}